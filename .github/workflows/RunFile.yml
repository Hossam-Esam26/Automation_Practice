name: Run Tests

on:
  pull_request:  # Or push if you prefer

jobs:
  run_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4  # Checkout code from GitHub repository

      - name: Install Java and Maven
        uses: actions/setup-java@v3
        with:
          java-version: '22'  # Adjust if needed for your project
          distribution: adopt

      - name: Print Working Directory (Optional)
        run: pwd  # Useful for debugging, can be removed

      - name: Set up Maven 3.9.5
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.9.5

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2


      - name: Download Allure Command (Not Recommended)
        run: |  # Download script (replace URL with a trusted source)
          curl -sL https://raw.githubusercontent.com/allure-framework/allure2/master/allure-command/target/allure-command.jar > allure-command.jar
      - name: Generate Allure Reports (if downloaded successfully)
        run: |
          if [ -f allure-command.jar ]; then
          java -jar allure-command.jar generate allure-results/  # Adjust path if needed
          else
          echo "Allure command not downloaded. Skipping report generation."
          fi



      - name: Run your automation script with Allure reporting
        env:
          MAVEN_OPTS: "-DskipTests=false"
        run: |
          mvn test -DsuiteXmlFile=src/test/resources/Runner/Runner.xml

      - name: Generate Allure Reports (Optional, locally)
        run: allure generate allure-results/  # Adjust path if needed

      - name: Upload Allure Report to GitHub Pages (Optional)
        uses: peaceiris/actions-gh-pages@v3  # Requires GitHub Pages setup
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use a PAT if necessary
        with:
          PUBLISH_DIR: allure-results  # Adjust path if needed

      - name: Send Slack Notification with Report Link (or Upload Report)
        uses: slackapi/slack-github-action@v1.23.0  # Requires Slack integration
        env:
          SLACK_BOT_TOKEN: xoxb-7125242232084-7116237564438-GbsJAU9ZmLtJkFuHrzDM26T1
        with:
          channel: 'report'
          message: "Tests completed!"  # Add emojis
          files: path/to/report.json  # Upload report directly (limited file size)
          # OR (if uploaded to GitHub Pages):
          # ${{ if eq(steps.upload-report.outputs.success, 'true'), format('[{0}](https://your-github-domain.com/your-repo/tree/gh-pages/allure-results)', 'See the Allure Report:') }}
